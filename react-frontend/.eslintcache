[{"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/index.js":"1","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/App.js":"2","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/reportWebVitals.js":"3","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/auth.service.js":"4","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/login.component.js":"5","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/register.component.js":"6","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/hello.component.js":"7","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/user.service.js":"8","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/auth-header.js":"9"},{"size":589,"mtime":1619257704893,"results":"10","hashOfConfig":"11"},{"size":1017,"mtime":1619257704893,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1619257704893,"results":"13","hashOfConfig":"11"},{"size":898,"mtime":1619257704893,"results":"14","hashOfConfig":"11"},{"size":4553,"mtime":1619257704893,"results":"15","hashOfConfig":"11"},{"size":4913,"mtime":1619257704893,"results":"16","hashOfConfig":"11"},{"size":1056,"mtime":1619257704893,"results":"17","hashOfConfig":"11"},{"size":271,"mtime":1619257704893,"results":"18","hashOfConfig":"11"},{"size":229,"mtime":1619257704893,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19wse2b",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/index.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/App.js",["40"],"import './App.css';\nimport React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport AuthService from \"./services/auth.service\";\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Hello from \"./components/hello.component\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    return (\n      <div>\n        Hello\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/hello\" component={Hello} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/reportWebVitals.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/auth.service.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/login.component.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/register.component.js",["41","42","43"],"import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\n// const email = value => {\n//   if (!isEmail(value)) {\n    // return (\n    //   <div className=\"alert alert-danger\" role=\"alert\">\n        {/* This is not a valid email. */}\n      {/* </div> */}\n    // );\n//   }\n// };\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    // this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n    //   email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n//   onChangeEmail(e) {\n    // this.setState({\n    //   email: e.target.value\n    // });\n//   }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      AuthService.register(\n        this.state.username,\n        // this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}","/home/parthsangani00/Desktop/Database-Project/frontend-react/src/components/hello.component.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/user.service.js",[],"/home/parthsangani00/Desktop/Database-Project/frontend-react/src/services/auth-header.js",[],{"ruleId":"44","severity":1,"message":"45","line":3,"column":25,"nodeType":"46","messageId":"47","endLine":3,"endColumn":29},{"ruleId":"44","severity":1,"message":"48","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":23,"column":9,"nodeType":"51","messageId":"52","endLine":23,"endColumn":43},{"ruleId":"49","severity":1,"message":"50","line":24,"column":7,"nodeType":"51","messageId":"52","endLine":24,"endColumn":21},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'isEmail' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]